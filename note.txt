															             BASIC LINUX
====================================== Cài đặt môi trường ======================================
- Các biến thể Linux - Linux Distro:
  Tiêu chế chọn hệ điều hành Linux để dùng
	1- Cho server hay desktop hay iOT
	2- Nếu là desktop:
		- Cần có giao diện đẹp, dễ dùng: Ubuntu, Linux Mint, ElementaryOS
		- Nhiều gói ứng dụng office: LibreOffice, xử lý đồ họa: Gimf
		- Liên tục cập nhật, kiểm tra xem lần cập nhật gần đây nhất của hệ điều hành đó là khi nào
	3- Nếu là server:
		- Kiến trúc mà hệ điều hành này hỗ trợ: Intel 32 Bit, 64 Bit hay là có hỗ trợ ARM hay không
		- Mức độ bảo mật: CentOS, RedHat, Debian
		- Trên máy chủ thì thường cài các phần mềm như: PHP, NodeJs, Python, Rails -> cần phải cài đặt dễ
			dàng các gói phần mềm này
		- Càng nhỏ, càng nhẹ càng tốt. Vì nhiều hệ điều hành chung nhau trên 1 máy chủ vật lý thì RAM, CPU sẽ 
			chia sẻ với nhau do đó nếu hệ điều hành của mình tốn nhiều dung lượng ổ cứng và RAM thì không tốt
	4- iOT
		- Hỗ trợ các loại chíp ARM
		- Nhỏ, nhẹ, hỗ trợ giao tiếp với các cổng(port), hỗ trợ các chuẩn kết nối với nhau
	Trang web tham khảo các thông tin: https://distrowatch.com/
	Cách xem thông tin:
		Last Update: Ngày cập nhật gần nhất
		OS Type: Hệ điều hành là hệ điều hành gì
		Based on: Kế thừa từ đâu
		Origin: Xuất xứ từ đâu
		Architecture: Kiến trúc CPU nó hỗ trợ(x86_64 -> 32bit và 64bit)
		Desktop: Trình quản lý desktop. Đối với những hệ điều hành Linux nó có giao diện
			Khi sử dụng Linux thì nên sử dụng hệ điều hành server(cần nhẹ nhất), sử dụng desktop thì dùng window hoặc mac. 
				Thông thường thì riêng phần trình quản lý giao diện thôi chiếm khoảng 500M, vì khá nặng nên không nên dùng hệ 
				điều hành desktop để cài trên máy chủ
	Debian: Là 1 hệ điều hành rất phổ biến, từ nó đã sinh ra rất nhiều hệ điều hành khác nhau trong đó đáng kể đến đó là
		Ubuntu
	RedHat cũng rất phổ biến, thường thì RedHat cho các hệ điều hành máy chủ server, từ nó đã sinh ra các hệ điều hành khác
		đáng kể đó là CentOS
	Linux family tree
- Cài đặt Ubuntu Server:
	Keyword: Set Up a Local Linux Environment with Vagrant
	Tạo môi trường thực hành Linux với môi trường là máy ảo Ubuntu Server sử dụng công cụ là Virtualbox kết hợp với Vagrant
	Với cách này thì có thể cài máy ảo ở trên mọi hệ điều hành
	Để dễ thao tác thì nên cài thêm phần mềm nữa đó là Git 
	Link download:
		Virtualbox: https://www.virtualbox.org/wiki/Downloads
		Vagrant: https://www.vagrantup.com/downloads.html
	Thứ tự cài đó là: Git, Virtualbox, Vagrant
	Chú ý đó là cần phải cài Virtualbox trước rồi mới cài Vagrant bởi vì Vagrant sẽ sử dụng Virtualbox
	VirtualBox: Là phần mềm tạo máy ảo, giả lập môi trường hệ điều hành khác mà không cần cài lại hệ điều hành
	Vagrant: Công cụ xây dựng và quản lý máy ảo qua các dòng lệnh
		Tham khảo các lệnh trong Vagrant: https://www.vagrantup.com/docs/cli/
		Để kiểm tra xem Vagrant đã được cài đặt xong chưa: vagrant -v
	Sau khi cài xong các phần mềm cần thiết thì tiến hành dựng máy ảo
		Tạo folder Ubuntu server, folder này sẽ chứa toàn bộ data của máy ảo
		Git bash here tại thư mục Ubuntu server, nó giống như là Terminal ở trên các hệ điều hành Linux
		pwd: In ra đường dẫn đầy đủ đến thư mục hiện hành(Lệnh của Linux)
		touch Vagrantfile: Tạo ra 1 file mới có tên là Vagrantfile, file này không có đuôi, đây sẽ là file để cấu hình
		Mở thư mục này lên và điền vào nội dung:
			Vagrant.configure(2) do |config|
					config.vm.box = "ubuntu/xenial64"
					config.vm.hostname = "local-server"
					config.vm.network "private_network", ip: "172.20.20.20"

					config.vm.provider "virtualbox" do |vb|
							vb.gui = false
							vb.memory = 2048
							vb.cpus = 1
					end
			end
		Tên hệ điều hành: ubuntu/xenial64
		Tên host: local-server
		Loại mạng: private_network
		ip: 172.20.20.20
		RAM: 2048
		CPU: 1
		vagrant up: Bắt đầu quá trình cài đặt máy ảo, sau khi câu lệnh được hoàn thành thì ta đã có 1 máy ảo là Ubuntu Server
		Kiểm tra lại ở trong VirtualBox
		vagrant ssh: Để kết nối remote vào trong máy ảo -> kết nối với server
			password mặc định là vagrant
		ifconfig: Sau khi kết nối với server, dùng lệnh này để kiểm tra địa chỉ ip của server, địa chỉ này giống với địa chỉ đã
			cấu hình ở Vagrantfile
		exit: Đóng kết nối
		vagrant halt: Tắt máy ảo -> Kiểm tra lại ở trong VirtualBox thì lúc này trạng thái của máy ảo chuyển sang trạng thái power off
		Nếu username có tên là username, directory của home là /home(thư mục username nằm ngay trong home) thì:
			cd ~: Trở về thư mục gốc username là /home/username
			<=>cd /home/username
		cd ../: Quay trỏ lại thư mục chứa nó
		cd /: Quay trở về vị trí cao nhất
		./foldername: Vào foldername cùng cấp với vị trí hiện tại
		ls: List ra file và thư mục nằm trong thư mục hiện hành
		cat <tên file>: Đọc và in nội dung file ra màn hình
		mkdir: Tạo thư mục mới vào trong thư mục hiện hành(make directory)
		rmdir: Xóa 1 thư mục(remove directory) 
		rm <tên file>: Xóa file
		cp <file nguồn> <file đích>  sao chép file từ vị trí nguồn đến vị trí đích.
		mv <nguồn> <đích>  di chuyển một file hoặc thư mục từ vị trí này sang vị trí khác. Lệnh này cũng dùng để đổi tên file hoặc thư 
			mục nếu như <nguồn> và <đích> là cùng một thư mục.
		Ngoài việc sử dụng vagrant để cài đặt máy ảo Linux thì nó còn cho phép ta cấu hình, cài đặt luôn các phầm mềm khác ở trong máy ảo
		Nhờ file cấu hình Vagrantfile thì chúng ta có thể chia sẻ môi trường làm việc với người khác bằng cách copy file Vagrantfile sau
			đó chay vagrant up

====================================== File và Folder ======================================
- Một số lệnh cơ bản:
	Các thao tác cơ bản với file trong Linux
	Ở trên các hệ điều hành server thì không có giao diện, mà chỉ tương tác với tệp và thư mục qua các câu lệnh
	pwd: Print Working Directory, lệnh này hiển thị ra thư mục hiện hành
	cd ..: Thoát ra khỏi thư mục
	ls: Kiểm tra toàn bộ các file và thư mục có trong thư mục hiện tại
	mkdir: Make Directory -> tạo thư mục mới
		mkdir <tên thư mục>
	mkdir -p: Tạo ra 1 cây thư mục
		mkdir -p Demo3/Demo4/Demo5
	touch: Tạo file
		touch <tên file>
	echo <nội dung> > <tên file>: Vừa tạo file và vừa ghi nội dung cho nó
	rm <tên file>: Remove -> để xóa 1 file
	rmdir <tên thư mục>: Remove Directory -> Xóa thư mục
	rm -r <têm thư mục>: remove directories and their contents recursively -> Xóa thư mục và toàn bộ các file, thư mục nằm ở bên trong
	cp <file nguồn> <file đích> sao chép file từ vị trí nguồn đến vị trí đích
	cp -r <thư mục nguồn> <thư mục đích>: sao chép thư mục và toàn bộ dữ liệu bên trong.
	mv <tên file> <thư mục đích>: Move file đến 1 thư mục nào đó
- Tìm kiếm file, thư mục:
	Keyword: find command in Linux
	Cách tìm các tệp, thư mục để thực hiện 1 thao tác nào đó khi nhớ mang máng tên của nó hoặc chỉ nhớ vị trí đại khái -> không thể dùng
		lệnh cd và ls để tìm được mà phải dùng lệnh tìm kiếm
		-> dùng lệnh find, lệnh này cho phép người dùng tìm file nếu mà biết gần đúng tên file
	find .: Liệt kê tất cả các file
	find . -name <tên file>: Tìm kiếm theo tên file -> kết quả sẽ in ra đường dẫn tuyệt đối của file
		Ở câu lệnh này thì khi tìm kiếm sẽ có phân biệt cả chữ hoa chữ thường
	find . -iname <tên file>: Tìm kiếm theo tên file -> kết quả sẽ in ra đường dẫn tuyệt đối của file
		Tìm kiếm mà không phân biệt chữ hoa và chữ thường
	find -name qua*.txt: Tìm tập tin có đuôi là txt mà tên được bắt đầu là qua
	find . -name quang\*: Tìm kiếm tất cả các tập tin và thư mục nằm trong thư mục hiện hành có bắt đầu là quang
	find -type f -name '*txt': Tìm kiếm tất cả các file có đuôi là .txt

- Cách sử dụng vim để mở và edit file trên server:
	Keyword: How to quit the vi/vim editor without saving your changes
	vim quang.txt: Mở file quang.txt bằng trình soạn thảo vim
	Các bước để thoát khỏi vim và không thực hiện lưu file đã mở:
		- Nhấn phím Esc
		- Gõ dấu :
		- Nhập q! và nhấn Ennter
	Các bước để mở file trên server bằng vim rồi sửa file sau đó lưu lại:
		vim quang.txt: Mở file quang.txt bằng vim
		Nhấn phím 'i' để có thể sửa file(mode lúc này là insert, ở phía dưới của vim có hiển thị lên -- INSERT --) -> sửa file
		Nhấn phím Esc sau khi sửa xong
		:w: Lưu file đã sửa
		:q: Thoát
		Sau đó có thể dùng lệnh cat để xem lại nội dung file trên:
			cat quang.txt
	
====================================== Users và Groups ======================================
- Users và Groups:
	Mỗi người dùng sẽ có 1 tài khoản để truy cập vào máy, sau khi đăng nhập xong thì người dùng mới có thể sử dụng tài nguyên
		ở trên máy
	Mỗi username có 1 tài khoản gồm có username và passwd dùng để đăng nhập, dựa vào tài khoản đó thì hệ thống sẽ cấp quyền truy
		cập hay là tương tác với các tài nguyên ở trên máy cho từng user
	Mỗi user sẽ nằm trong 1 hay nhiều group
	Group là các nhóm user với 1 quyền hạn cụ thể nào đó
	Ngoài tên ra thì mỗi user có 1 id để định danh gọi là UID, UID(userID) này là duy nhất, không trùng lặp
	Tương tự như user thì mỗi group cũng có 1 group để định danh gọi là GID(groupID)
	Mỗi user đều có 1 thư mục gọi là Home Directory, mỗi lần đăng nhập vào hệ thống thì thư mục hiện hành cũng chính là thư mục
		home này
	pwd: Kiểm tra thư mục hiện hành. Với tài khoản vagrant vừa được tạo ra thì thư mục hiện hành sẽ là /home/vagrant
	cat /etc/passwd: Xem thông tin của các user, file này là file Read-Only, chỉ có quyền đọc mà không có quyền sửa bởi vì mặc định
		tài khoản username đã tạo là tại khoản thường, không phải là tài khoản có quyền sửa file hệ thống
		Nội dung của file này sẽ gồm nhiều dòng, mỗi dòng là thông tin của 1 user
			vagrant:x:1000:1000:,,,:/home/vagrant:/bin/bash
		Trong mỗi 1 dòng được chia làm 7 phần được ngăn cách mới nhau bởi dấu 2 chấm theo thứ tự:
			User Name
			Password mã hóa
			UID
			GID
			Comment
			Home Directory
			Login Shell
		User đầu tiên là 1 user đặc biệt, đây là supper user, là user có quyền cao nhất trong hệ thống
			root:x:0:0:root:/root:/bin/bash
		Các Password ở file này hiển thị lên đều là x vì đang sử dụng chế độ là Shadow Password, khi gõ mật khẩu thì sẽ không hiển thị
			lên bất kỳ 1 ký tự nào
		Thông tin của password được lưu ở trong 1 file khác đó là /etc/shadow
	/etc/group: file này chứa thông tin của các group
		sudo:x:27:ubuntu
		root:x:0:
		vagrant:x:1000:
		Ở mỗi dòng sẽ là thông tin của 1 group, chỉ bao gồm 4 phần:
			Group Name
			Password được mã hóa
			GID: group ID
			List Users: Danh sách các user nằm trong group đó
	Thực hành 1 số lệnh về user và group
		Keyword: Linux command cheat sheet user group
		useradd [USERNAME]: Thêm 1 user mới, nhưng chỉ có user root mới có thể add user hay group vào hệ thống
		Dùng sudo để lấy quyền root tạm thời để thêm user mới:
			sudo useradd quang -> thêm 1 user mới có tên là quang(password là vagrant)
		Để Switch sang tài khoản mới vừa tạo:
			su - quang(nhập password của tài khoản là vagrant vào là ok)
		Dùng tài khoản là quang này để add thêm 1 tài khoản mới:
			sudo useradd testadd
			-> quang is not in the sudoers file.  This incident will be reported. Nghĩa là tài khoản này không nằm trong nhóm
				tài khoản có quyền sudo
		cat /etc/group để đọc thì thấy rằng trong nhóm sudo không có user là quang
		Để thêm user là quang vào trong group sudo thì dùng lệnh sau:
			sudo usermod -aG sudo quang
- Phân quyền User và Group:
	Một file trong Linux sẽ được phân quyền truy cập đối với 3 đối tượng:
		Owner: Chủ sở hữu
		Group: Nhóm sở hữu
		Others: Các user khác mà không nằm trong 2 nhóm trên
		Các quyền truy cập có thể là: Read and write hoặc Read-only
	Đăng nhập vào một tài khoản khác: su
		su <tên tài khoản>
	Kiểm tra xem tài khoản đang đăng nhập là tài khoản nào:
		whoami
	Phân quyền cho cả 1 thư mục nào đó, như vậy thì các file trong thư mục này sẽ được bảo mật hơn, các user khác sẽ không đọc được
		ls -la: Để xem cấu trúc của 1 tập tin, thư mục
			Hiện nay trong thư mục của user vagrant có 1 folder quang và 1 file quang.txt:
			drwxrwxr-x 3 vagrant vagrant 4096 Jul  7 10:24 quang
			-rw-rw-r-- 1 vagrant vagrant   48 Jul  7 11:13 quang.txt
				-> Giá trị đầu tiên là loại file: d có nghĩa là thư mục
					r(read): Quyền đọc file/folder(được biểu diễn bằng số 4)
					w(write): Quyền ghi/sửa nội dung file/folder(được biểu diễn bằng số 2)
					x(execute): Quyền thực thi(truy cập). Đối với thư mục thì cần phải có quyền execute thì mới dùng lệnh cd để truy cập vào được
						(được biểu diễn bằng số 1)
					-(Deny): Không có quyền(được biểu diễn bằng số 0)
		chmod 770 quang: Cấp quyền truy cập đầy đủ(rwx: đọc, ghi/sửa, truy cập vào thư mục) cho chủ sở hữu(vagrant), nhóm quản trị(những
			users thuộc group mà chủ sở hữu(vagrant) của thư mục này), các user khác trên máy thì không có quyền gì 
		su quang: Đăng nhập lại vào với tài khoản là quang
		ls: Để list các folder, file có trong home/vagrant: quang, quang.txt
		cd quang: Truy cập vào folder quang
		Permission denied
	Xem danh sách Group mà một User đã tham gia:
		id [tên user]
	Phân quyền với group:
		Đăng nhập bằng tài khoản là vagrant
		Tạo thêm 1 group mới tên là friend:
			sudo groupadd friend
		Cho tài khoản là quang vào trong group friend này:
			sudo usermod -aG friend quang
		Kiểm tra lại thông tin của group:
			cat /etc/group
			->friend:x:1003:quang
			Thấy rằng group friend đã có user là quang
		Có thể xem danh sách Group mà user quang đã tham gia:
			id quang
			->uid=1002(quang) gid=1002(quang) groups=1002(quang),27(sudo),1003(friend)
			id vagrant
			-> uid=1000(vagrant) gid=1000(vagrant) groups=1000(vagrant)
		-> Phân quyền cho group friend cho phép đọc, ghi hay truy cập folder quang nằm trong /home/vagrant thì mặc định user quang cũng có 
			quyền đọc, ghi hay truy cập vào thư mục /home/vagrant/quang
    
  Thực hành phân quyền user và group bằng command line:
    ls -l: Kiểm tra quyền truy cập vào 1 file hay thư mục, muốn xem thêm cả những file ẩn thì thêm tham số là -a
      drwxrwx--- 3 vagrant vagrant 4096 Jul  7 10:24 quang
      -rw-rw-r-- 1 vagrant vagrant   48 Jul  7 11:13 quang.txt
      Để xem quyền hạn của file hay thư mục thì xem ở phần đầu tiên, ở ký hiệu đầu tiên:
        d: Thư mục(directory)
        -: File
      Các ký tự tiếp theo được chia làm 3 phần, mỗi phần có 3 ký tự, nó là phân quyền tương ứng với cả Owner(chủ sở hữu file or thư mục), 
        Group và Others(các người dùng khác)
      Có 3 ký tự để mô tả quyền:
        r: Read là quyền đọc, đối với file là xem nội dung file còn đối với thư mục thì là xem danh sách bên trong thư mục
        w: Write là quyền ghi, đối với file thì là thay đổi nội dung file, còn đổi thư mục thì là di chuyển hay là thay đổi tên thư mục
        x: Execute là quyền là quyền thực thi, nó cho phép thực thi 1 file nếu đó là 1 file chương trình, còn đối với thư mục thì nó cho
          phép di chuyển vào bên trong thư mục và thao tác với các thư mục con ở bên trong
      Giá trị tiếp theo là ai là chủ sở hữu(Owner) của file hay thư mục, nhóm sở hữu(group) là gì
    Chuyển nhóm sở hữu của 1 thư mục: chgrp <tên group> <tên thư mục>: Để thay đổi group
      vagrant@local-server:~$ ls -l
      total 8
      drwxrwx--- 3 vagrant vagrant 4096 Jul  7 10:24 quang
      -rw-rw-r-- 1 vagrant vagrant   48 Jul  7 11:13 quang.txt
      vagrant@local-server:~$ sudo chgrp friend quang
      vagrant@local-server:~$ ls -l
      total 8
      drwxrwx--- 3 vagrant friend  4096 Jul  7 10:24 quang
      -rw-rw-r-- 1 vagrant vagrant   48 Jul  7 11:13 quang.txt
      -> Kiểm tra lại thì thấy rằng thư mục quang đã có group là friend
        Thư mục quang ban đầu thuộc nhóm sở hữu là vagrant, quyền của Others là --- nên user quang thuộc nhóm friend sẽ không có quyền làm  
          gì cả. Nhưng sau khi chuyển nhóm sở hữu vagrant -> friend thì user thuộc nhóm friend cũng có các quyền truy cập, đọc và ghi
        vagrant@local-server:~$ su quang
        quang@local-server:/home/vagrant$ cd quang/
        quang@local-server:/home/vagrant/quang$ ls
        quang1  quang2.txt
      Tạo 1 folder mới có tên là project, truy cập vào folder đó và tạo thêm file mới đó là index.html, thay đổi quyền truy cập cho file đó 
        thành Read Only đối với cả 3 đối tượng(Owner, Group và Others)
        vagrant@local-server:~$ mkdir project
        vagrant@local-server:~$ cd project/
        vagrant@local-server:~/project$ touch index.html
        vagrant@local-server:~/project$ ls -l
        total 0
        -rw-rw-r-- 1 vagrant vagrant 0 Jul 13 09:27 index.html
        vagrant@local-server:~/project$ chmod 444 index.html
        vagrant@local-server:~/project$ ls -l
        total 0
        -r--r--r-- 1 vagrant vagrant 0 Jul 13 09:27 index.html
        vagrant@local-server:~/project$ rm index.html
        rm: remove write-protected regular empty file 'index.html'? y
        vagrant@local-server:~/project$ ls -l
        total 0
        -> Lúc này khi thực hiện xóa file index.html thì sẽ có cảnh báo có muốn xóa file mà không có quyền ghi hay không, nhưng vẫn xóa thành
          công
      -> Để không cho phép xóa file thì cần phân quyền cho thư mục chứa file(trong trường hợp này là thư mục project) bằng cách gỡ bỏ quyền 
        Execute của thư mục -> khi đó sẽ không thể cd vào trong thư mục được hay xóa file ở trong thư mục được nữa
          vagrant@local-server:~/project$ touch index.html
          vagrant@local-server:~/project$ ls -l
          total 0
          -rw-rw-r-- 1 vagrant vagrant 0 Jul 13 09:44 index.html
          vagrant@local-server:~/project$ cd ..
          vagrant@local-server:~$ chmod 666 project/
          drw-rw-rw- 2 vagrant vagrant 4096 Jul 13 09:44 project
          drwxrwxrwx 3 vagrant friend  4096 Jul  7 10:24 quang
          -rw-rw-r-- 1 vagrant vagrant   48 Jul  7 11:13 quang.txt
          vagrant@local-server:~$ cd project/
          -bash: cd: project/: Permission denied
          vagrant@local-server:~$ rm project/index.html
          rm: cannot remove 'project/index.html': Permission denied
  Có lệnh thông dụng nhất khi phân quyền đó là chown và chmod:
    chown: Dùng để thay đổi quyền sở hữu của tập tin, chmod dùng để gán hoặc loại bỏ quyền
    Thư mục project đang thuộc quyền sở hữu của user và nhóm sở hữu của thư mục này là test
    Dùng lệnh chown để thay đổi cả Owner lẫn group
    Cú pháp: chown <tên user>:<tên group> <tên file/tên thư mục>
    Trong trường hợp không thể thay đổi được sang user hoặc group khác thì phải dùng sudo -> sudo chown <tên user>:<tên group> <tên file/tên thư mục>
      vagrant@local-server:~$ ls -l
      total 12
      drwxrwxrwx 2 quang   test    4096 Jul 13 09:53 project
      drwxrwxrwx 3 quang   friend  4096 Jul  7 10:24 quang
      -rw-rw-r-- 1 vagrant vagrant   48 Jul  7 11:13 quang.txt
      vagrant@local-server:~$ chown vagrant:quang project/
      chown: changing ownership of 'project/': Operation not permitted
      vagrant@local-server:~$ sudo chown vagrant:quang project/
      vagrant@local-server:~$ ls -l
      total 12
      drwxrwxrwx 2 vagrant quang   4096 Jul 13 09:53 project
      drwxrwxrwx 3 quang   friend  4096 Jul  7 10:24 quang
      -rw-rw-r-- 1 vagrant vagrant   48 Jul  7 11:13 quang.txt
    Để áp dụng quyền sở hữu cho toàn bộ file và thư mục con nằm ở bên trong nữa thì dùng thêm tham số là -R
      -> sudo chown -R <tên user>:<tên group> <tên file/tên thư mục>
      Việc này cho phép thay đổi owner của thư mục và toàn bộ file và thư mục con của nó cũng thay đổi theo
      vagrant@local-server:~$ ls -l
      total 12
      drwxrwxrwx 3 vagrant quang   4096 Jul 13 10:36 project
      drwxrwxrwx 3 quang   friend  4096 Jul  7 10:24 quang
      -rw-rw-r-- 1 vagrant vagrant   48 Jul  7 11:13 quang.txt
      vagrant@local-server:~$ cd project/
      vagrant@local-server:~/project$ ls -l
      total 4
      -rw-rw-r-- 1 quang   quang      0 Jul 13 10:36 file1.txt
      -r--r--r-- 1 vagrant vagrant    0 Jul 13 09:44 index.htmml
      drwxrwxr-x 2 quang   quang   4096 Jul 13 10:36 quang1
      vagrant@local-server:~/project$ cd ..
      vagrant@local-server:~$ sudo chown -R vagrant:test project/
      vagrant@local-server:~$ ls -l
      total 12
      drwxrwxrwx 3 vagrant test    4096 Jul 13 10:36 project
      drwxrwxrwx 3 quang   friend  4096 Jul  7 10:24 quang
      -rw-rw-r-- 1 vagrant vagrant   48 Jul  7 11:13 quang.txt
      vagrant@local-server:~$ cd project/
      vagrant@local-server:~/project$ ls -l
      total 4
      -rw-rw-r-- 1 vagrant test    0 Jul 13 10:36 file1.txt
      -r--r--r-- 1 vagrant test    0 Jul 13 09:44 index.htmml
      drwxrwxr-x 2 vagrant test 4096 Jul 13 10:36 quang1
      vagrant@local-server:~/project$
    chmod: Dùng để thêm bớt các quyền như là read, write và execute cho các đối tượng
    Cú pháp: chmod <quyền> <file/directory>
    Ở phần quyền này thì có 2 cách để thể hiện:
      Sử dụng các ký tự chữ cái: r(read), w(write), x(execute), u(phân quyền cho Owner), g(phân quyền cho group), o(phân quyền cho Others)
        a(phân quyền cho cả 3 đối tượng)
        +: Dùng để thêm quyền
        -: Dùng để bớt Quyền
        =: Để thiết lập quyền 1 cách chính xác
        Trong trường hợp áp dụng phân quyền cho 2 đối tượng cùng 1 lúc thì viết liền nhau và phân cách nhau bởi dấu phẩy
          vagrant@local-server:~$ ls -l
          total 12
          drwxrwxrwx 3 quang   quang   4096 Jul 13 10:36 project
          drwxrwxrwx 3 quang   friend  4096 Jul  7 10:24 quang
          -rw-rw-r-- 1 vagrant vagrant   48 Jul  7 11:13 quang.txt
          vagrant@local-server:~$ cd project/
          vagrant@local-server:~/project$ ls -l
          total 4
          -rw-rw-r-- 1 quang quang    0 Jul 13 10:36 file1.txt
          -r--r--r-- 1 quang quang    0 Jul 13 09:44 index.htmml
          drwxrwxr-x 2 quang quang 4096 Jul 13 10:36 quang1
          vagrant@local-server:~/project$ sudo chmod u+x file1.txt
          vagrant@local-server:~/project$ ls -l
          total 4
          -rwxrw-r-- 1 quang quang    0 Jul 13 10:36 file1.txt
          -r--r--r-- 1 quang quang    0 Jul 13 09:44 index.htmml
          drwxrwxr-x 2 quang quang 4096 Jul 13 10:36 quang1
          vagrant@local-server:~/project$ sudo chmod g-w file1.txt
          vagrant@local-server:~/project$ ls -l
          total 4
          -rwxr--r-- 1 quang quang    0 Jul 13 10:36 file1.txt
          -r--r--r-- 1 quang quang    0 Jul 13 09:44 index.htmml
          drwxrwxr-x 2 quang quang 4096 Jul 13 10:36 quang1
          vagrant@local-server:~/project$ sudo chmod o=rx file1.txt
          vagrant@local-server:~/project$ ls -l
          total 4
          -rwxr--r-x 1 quang quang    0 Jul 13 10:36 file1.txt
          -r--r--r-- 1 quang quang    0 Jul 13 09:44 index.htmml
          drwxrwxr-x 2 quang quang 4096 Jul 13 10:36 quang1
          vagrant@local-server:~/project$ sudo chmod u-x,g+w file1.txt
          vagrant@local-server:~/project$ ls -l
          total 4
          -rw-rw-r-x 1 quang quang    0 Jul 13 10:36 file1.txt
          -r--r--r-- 1 quang quang    0 Jul 13 09:44 index.htmml
          drwxrwxr-x 2 quang quang 4096 Jul 13 10:36 quang1
      Sử dụng chữ số trong hệ bát phân(các số từ 0 đến 7) để mô tả quyền. Có 3 đối tượng được phân quyền đó là Owner, group và user thì 
        sẽ được mô tả bởi 3 chữ số
        Số 4: Quyền đọc(r)
        Số 2: Quyền ghi(w)
        Số 1: Quyền thực thi(x)
        Số 0: Không có quyền nào(-)
        Số 5: Chỉ có 2 quyền là read và execute
        Số 7: Có đầy đủ 3 quyền read, write và execute
          vagrant@local-server:~/project$ ls -l
          total 4
          -rw-rw-r-x 1 quang quang    0 Jul 13 10:36 file1.txt
          -r--r--r-- 1 quang quang    0 Jul 13 09:44 index.htmml
          drwxrwxr-x 2 quang quang 4096 Jul 13 10:36 quang1
          vagrant@local-server:~/project$ sudo chmod 777 file1.txt
          vagrant@local-server:~/project$ ls -l
          total 4
          -rwxrwxrwx 1 quang quang    0 Jul 13 10:36 file1.txt
          -r--r--r-- 1 quang quang    0 Jul 13 09:44 index.htmml
          drwxrwxr-x 2 quang quang 4096 Jul 13 10:36 quang1
          vagrant@local-server:~/project$ sudo chmod 755 file1.txt
          vagrant@local-server:~/project$ ls -l
          total 4
          -rwxr-xr-x 1 quang quang    0 Jul 13 10:36 file1.txt
          -r--r--r-- 1 quang quang    0 Jul 13 09:44 index.htmml
          drwxrwxr-x 2 quang quang 4096 Jul 13 10:36 quang1
          vagrant@local-server:~/project$ sudo chmod 700 file1.txt
          vagrant@local-server:~/project$ ls -l
          total 4
          -rwx------ 1 quang quang    0 Jul 13 10:36 file1.txt
          -r--r--r-- 1 quang quang    0 Jul 13 09:44 index.htmml
          drwxrwxr-x 2 quang quang 4096 Jul 13 10:36 quang1

====================================== Cài đặt phần mềm ======================================
- Package management:
  Khi quản lý 1 server Linux thì công việc tốn khá nhiều time đó là cài đặt, cấu hình các phần mềm
  Trong hệ điều hành Linux thì đều có sẵn các công cụ để quản lý việc cài đặt, cập nhật hay gỡ bỏ các 
    gói phần mềm không cần thiết
  Ứng với mỗi hệ điều hành thì sẽ có 1 số công cụ quản lý phần mềm riêng
    Ubuntu và Debian có dpkg, apt, apt-get
    Fedora và CentOS có rmp, yum
    MacOS có homebrew
  Ở Ubuntu phiên bản 14 trở lên có 1 công cụ là apt còn đối với các bản Ubuntu cũ hơn hay dòng Debian thì
    có apt-get
  apt-get cũng là 1 phần mềm hay gọi là Package, nó dùng để quản lý các Package khác
  Để xem các lệnh của apt-get: apt-get --help
    -> các lệnh hay dùng đó là: update, upgrade, install, remove...
    Lệnh update lại các thông tin của các gói phần mềm ở trên máy
      -> sudo apt-get update
  Trước khi cài đặt 1 Package nào đó thì nên chạy lệnh update để lấy thông tin mới nhất, version mới nhất của
    package
  Để cài 1 package thì dùng lệnh: sudo apt-get install
    sudo apt-get install fortune-mod
    package này có tác dụng hiển thị lên 1 câu ngạn ngữ, danh ngôn hay 1 đoạn văn bất kỳ bằng tiếng anh
    Trước khi cài thì sẽ có các thông báo hiển thị:
      The following additional packages will be installed:
        fortunes-min librecode0
      Suggested packages:
        fortunes x11-utils
      The following NEW packages will be installed:
        fortune-mod fortunes-min librecode0
      Ở thông báo này có nghĩa là có package đi kèm sẽ được cài đặt cùng đó là: fortunes-min librecode0
    Khi cài đặt xong thì có thể sử dụng được fortune chỉ đơn giản là gõ lệnh fortune
  Để kiểm tra file chạy của package ở đâu thì dùng lệnh which: which fortune
    vagrant@local-server:~$ which fortune
    /usr/games/fortune
  Xóa package: sudo apt-get remove fortune-mod
    The following packages were automatically installed and are no longer required:
      fortunes-min librecode0
    Use 'sudo apt autoremove' to remove them.
    The following packages will be REMOVED:
      fortune-mod
    0 upgraded, 0 newly installed, 1 to remove and 15 not upgraded.
    After this operation, 141 kB disk space will be freed.
    Do you want to continue? [Y/n] y
  Xóa kiểu trên thì nó sẽ không xóa các file cấu hình, để xóa được các file cấu hình thì dùng thêm tham Số
    là --purge
    sudo apt-get remove --purge fortune-mod
  Kiểm tra lại dùng lệnh which: which fortune
    ->Không tìm thấy file cấu hình nữa, có nghĩa là nó đã được remove
  dpkg -l: Hiển thị tất cả các package mà ta đã cài ở trên máy
    ii  fortunes-min       1:1.99.1-7     all 
    ii  librecode0:amd64   3.6-22         amd64 
    ...
  dpkg -l | grep fortune: Lọc các kết quả có chứa chữ fortune
    ii  fortunes-min                     1:1.99.1-7 
    sudo apt-get remove --purge fortunes-min
    sudo apt-get remove --purge librecode0
  Để nâng cấp phiên bản của 1 package: apt-get install --only-upgrade [tên package]